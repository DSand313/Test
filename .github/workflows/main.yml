name: Update Wiki with Merged PRs

on:
  push:
    branches:
      - main  # Trigger only on pushes to the main branch

permissions:
  contents: write  # Allows write access to the repository contents

jobs:
  update_wiki:
    runs-on: ubuntu-latest

    steps:
    
      - name: Fetch latest merged pull requests
        id: fetch_prs
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&per_page=10")

          echo "$response"

          merged_prs=$(echo "$response" | jq -r 'map(select(.merged_at != null)) | .[] | "PR: \(.title) - \(.html_url)\nDescription: \(.body)"')

          if [ -z "$merged_prs" ]; then
            echo "No merged PRs found."
            exit 1
          fi

          echo "prs<<EOF" >> $GITHUB_ENV
          echo "$merged_prs" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Debug merged PRs
        run: echo "${{ env.prs }}"

      - name: Check response
        run: |
          check_response=$(curl -s -o check_response.json -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/wiki/test-1")
          
          if [ "$check_response" -ne 200 ]; then
            echo "Wiki page does not exist. Response code: $check_response"
            exit 1
          fi

      - name: Debug Wiki Update
        run: |
          echo "Updating Wiki URL: https://api.github.com/repos/${{ github.repository }}/wiki/test-1"
          
      - name: Update wiki
        run: |
          CONTENT="### Latest Merged Pull Requests\n\n${{ env.prs }}"
          CONTENT_ESCAPED=$(echo -e "$CONTENT" | jq -sR .)
          echo "Updating wiki with content: $CONTENT_ESCAPED"
          
          response=$(curl -s -o response.json -w "%{http_code}" -L \
            -X PUT \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d "{\"content\": $CONTENT_ESCAPED}" \
            "https://api.github.com/repos/DSand313/Test/wiki/test-1")
          
          echo "Response Code: $response"
          cat response.json

          if [ "$response" -ne 200 ]; then
            echo "Failed to update wiki."
            exit 1
          fi
